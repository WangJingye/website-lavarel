<?php

namespace App\Http\Controllers\{{app}}\{{module}};

use App\Http\Controllers\{{app}}\Common\Controller;
use App\Lib\{{table}}Service;
use App\Models\{{table}}Model;
use Illuminate\Http\Request;{{otherUse}}

class {{table}}Controller extends Controller
{
    /** @var {{table}}Service */
    public ${{mtable}}Service;{{otherDefineService}}

    public function __construct(Request $request)
    {
        parent::__construct($request);
        $this->{{mtable}}Service = new {{table}}Service();
    }

    /**
     * @throws \Exception
     */
    public function index()
    {
        $params = $this->request;
        $params['page'] = $this->request->get('page', 1);
        $params['page_size'] = $this->request->get('page_size', 10);
        if (!empty($params['search_type'])) {
            $params[$params['search_type']] = $params['search_value'];
        }
        $res = $this->{{mtable}}Service->getList($params);{{otherCode}}
        return $this->render('{{mmodule}}/{{mtable}}/index', [
            'params' => $params,
            'pagination' => $res->pageHtml(),
            'list' => $res->list,{{otherAssign}}
        ]);
    }

    /**
     * @throws \Exception
     */
    public function edit()
    {
        $params = $this->request;
        if ($this->request->ajax() && $this->request->isMethod('POST')) {
            try {{{parseFile}}
                $this->{{mtable}}Service->save{{table}}($params->request->all());
                return $this->success('保存成功');
            } catch (\Exception $e) {
                return $this->error($e->getMessage());
            }
        }
        $title = '创建{{tablename}}';
        $model = null;
        if (!empty($params['{{primaryKey}}'])) {
            $model = {{table}}Model::query()->find($params['{{primaryKey}}']);
            if (!$model) {
                throw new \Exception('数据不存在');
            }
            $title = '编辑{{tablename}} - ' . $model['{{primaryKey}}'];
        }{{otherCode}}
        return $this->render('{{mmodule}}/{{mtable}}/edit', [
            'model' => $model,
            'title' => $title,{{otherAssign}}
        ]);

    }

    /**
     * @throws \Exception
     */
    public function delete()
    {
        $params = $this->request;
        if ($this->request->ajax() && $this->request->isMethod('POST')) {
            try {
                if (empty($params['{{primaryKey}}'])) {
                    throw new \Exception('非法请求');
                }
                $model = {{table}}Model::query()->find($params['{{primaryKey}}']);
                $model->delete();
                return $this->success('删除成功');
            } catch (\Exception $e) {
                return $this->error($e->getMessage());
            }
        }
    }{{statusAction}}{{sortAction}}
}